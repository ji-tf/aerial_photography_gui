# -*- coding: utf-8 -*-
"""
/***************************************************************************
 AerialPhotographyGUIDialog
                                 A QGIS plugin
 Plugin for aerial photography
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-07-29
        git sha              : $Format:%H$
        copyright            : (C) 2024 by Violet
        email                : madarich18@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'Aerial_Photography_GUI_dialog_base.ui'))


class AerialPhotographyGUIDialog(QtWidgets.QMainWindow, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(AerialPhotographyGUIDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
        
        self.button_choise_txt.clicked.connect(self.file_afs_txt.redo) # type: ignore
        self.button_choise_kml.clicked.connect(self.file_kml_txt.redo) # type: ignore
        self.radioButton_5.clicked['bool'].connect(self.camera_model_5.redo) # type: ignore
        self.radioButton_5.clicked['bool'].connect(self.focal_len_5.redo) # type: ignore
        self.radioButton_5.clicked['bool'].connect(self.frame_size_x_5.redo) # type: ignore
        self.radioButton_5.clicked['bool'].connect(self.frame_size_y_5.redo) # type: ignore
        self.radioButton_5.clicked['bool'].connect(self.spectral_characteristics_photo_5.redo) # type: ignore
        self.radioButton_5.clicked['bool'].connect(self.image_format_5.redo) # type: ignore
        self.radioButton_6.clicked['bool'].connect(self.camera_model_5.redo("Sony A6000")) # type: ignore
        self.radioButton_6.clicked['bool'].connect(self.focal_len_5.redo("20")) # type: ignore
        self.radioButton_6.clicked['bool'].connect(self.frame_size_x_5.redo("6000")) # type: ignore
        self.radioButton_6.clicked['bool'].connect(self.frame_size_y_5.redo("4000")) # type: ignore
        self.radioButton_6.clicked['bool'].connect(self.spectral_characteristics_photo_5.redo("NIR")) # type: ignore
        self.radioButton_6.clicked['bool'].connect(self.image_format_5.redo("ARW")) # type: ignore
